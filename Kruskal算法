#define INF 0x3f3f3f
const int maxnum = 1001;
const int maxedgenum = 25005;
int par[maxnum];
int height[maxnum];

//并查集部分
void init(int n)
{
	for (int i = 0; i < n; i++)
	{
		par[i] = i;
		height[i] = 0;
	}
}
int find(int x)
{
	if (par[x] == x)
		return x;
	else
	{
		return par[x] = find(par[x]);
	}
}

void unite(int x, int y)
{
	x = find(x);
	y = find(y);
	if (x == y)
		return;
	if (height[x] < height[y])
	{
		par[x] = y;
	}
	else
	{
		par[y] = x;
		if (height[x] == height[y])
			height[x]++;
	}
}

bool same(int x, int y)
{
	return find(x) == find(y);
}

struct edge
{
	int u, v, cost;
};

bool cmp(const edge& e1, const edge& e2)
{
	return e1.cost < e2.cost;
}
edge es[maxedgenum];
int vnum, edgenum;

*********************************************************核心部分**************************************************************
{
	sort(es, es + edgenum, cmp);
	init(vnum);
	int res = 0;
	for (int i = 0; i < edgenum; i++)
	{
		edge e = es[i];
		if (!same(e.u, e.v))
		{
			unite(e.u, e.v);
			res += e.cost;
		}
	}
	return res;
}
