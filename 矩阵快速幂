#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>

using namespace std;

typedef vector<int> vec;
typedef vector<vec> mat;
typedef long long ll;

 //const long long int maxnum=0x3f3f3f3f;
 ll mod=998244353;
 //计算矩阵A*矩阵B
 mat mul(mat &A, mat &B)
 {
 mat C(A.size(),vec(B[0].size()));
  for(int i=0;i<A.size();i++)
  {
    for(int j=0;j<B[0].size();j++)
    {
      for(int k=0;k<B.size();k++)
      {
          C[i][j]=(C[i][j]+A[i][k]*B[k][j])%mod;
      }
    }
  }
  return C;
 }


 //计算A的n次方
 ll n;
 mat pow(mat A,ll n)
 {
  mat B(A.size(),vec(A.size()));
  for(int i=0;i<A.size();i++)
  {
    B[i][i]=1;
  }
  while(n>0)
  {
    if(n&1) B=mul(B,A);
    A=mul(A,A);
    n>>= 1;
  }
  return B;
 }


// //快速幂
// ll mod_pow(llx,lln,ll mod)
// {
//  if(n==0) return 1;
//  ll res=mod_pow(x*x%mod,n/2,mod);
//  if(n&1)
//      res=res*x%mod;
//   return res;
//  }


int main()
{
    while(~scanf("%lld",&n))
    {
        mat A(5,vec(5));
        A[0][0]=3,A[0][1]=9,A[0][2]=9,A[0][3]=3,A[0][4]=1;
        A[1][0]=0,A[1][1]=3,A[1][2]=6,A[1][3]=3,A[1][4]=1;
        A[2][0]=0,A[2][1]=0,A[2][2]=3,A[2][3]=3,A[2][4]=1;
        A[3][0]=0,A[3][1]=0,A[3][2]=0,A[3][3]=3,A[3][4]=1;
        A[4][0]=0,A[4][1]=0,A[4][2]=0,A[4][3]=0,A[4][4]=1;
        mat B(5,vec(1));
        B[0][0]=B[1][0]=B[2][0]=B[3][0]=B[4][0]=3;
        ll res;
        A=pow(A,n-1);
        A=mul(A,B);
        cout<<A[0][0]<<endl;
    }
}
